Monk and Rotation

Monk loves to preform different operations on arrays, and so being the principal of Hackerearth School, he assigned a task to his new student Mishki. Mishki will be provided with an integer array A of size N and an integer K , where she needs to rotate the array in the right direction by K steps and then print the resultant array. As she is new to the school, please help her to complete the task.

Input:
The first line will consists of one integer T denoting the number of test cases.
For each test case:
1) The first line consists of two integers N and K, N being the number of elements in the array and K denotes the number of steps of rotation.
2) The next line consists of N space separated integers , denoting the elements of the array A.

Code:

public class TestClass {

     public static void rightRotateByOne(int[] A)
    {
        int last = A[A.length - 1]; 
        for (int i = A.length - 2; i >= 0; i--) {
            A[i + 1] = A[i];    //rotating to right 
        }
 
        A[0] = last;  //storing the last array number in 1st position
    }

    public static void rightRotate(int[] A, int k)
    {
        if (k < 0 || k >= A.length) {
            return;  //if k will be in negative or equal to length of Array then it will stop
        }
 
        for (int i = 0; i < k; i++) {
            rightRotateByOne(A);    //for rotating till k
        }
    }    

    public static void main(String args[] ) throws Exception {

        int A[]={1,2,3,4,5};
        int k=2;

        rightRotate(A, k);

        for(int i=0;i<A.length;i++){
            System.out.print(A[i] + " ");    //printing final output
        }

    }
}

Output :

4 5 1 2 3

////////////////////////////////////////////////////////////////////////////////////

New Code :

import java.util.Scanner; 
public class TestClass {

     public static void rightRotateByOne(int[] A)
    {
        int last = A[A.length - 1]; 
        for (int i = A.length - 2; i >= 0; i--) {
            A[i + 1] = A[i];    //rotating to right 
        }
 
        A[0] = last;  //storing the last array number in 1st position
    }

    public static void rightRotate(int[] A, int k)
    {
        if (k < 0 || k >= A.length) {
            return;  //if k will be in negative or equal to length of Array then it will stop
        }
 
        for (int i = 0; i < k; i++) {
            rightRotateByOne(A);    //for rotating till k
        }
    }    

    public static void main(String args[] ) throws Exception {

        //int A[]={1,2,3,4,5};
        int k;
        int T;
        int n;
        

        Scanner sc = new Scanner(System.in);
        
        T=sc.nextInt();
        for(int j=0;j<T;j++){
            
            n=sc.nextInt(); //Entering number of elements in array
            k=sc.nextInt(); //Entering number of Test Cases to perform
            int[] A = new int[n];
            //System.out.println("Enter the elements of the array: ");  
            for(int i=0; i<n; i++)  
            {  
                //reading array elements from the user   
                A[i]=sc.nextInt();  
            }  
            //System.out.println("Array elements are: ");
            /*for (int i=0; i<n; i++)   
            {  
                System.out.println(A[i]);  
            } */ 

        
            rightRotate(A, k);

            for(int i=0;i<A.length;i++){
                System.out.print(A[i] + " ");    //printing final output
            }
        }
    }
}
